name: Test

on:
  pull_request:
    branches:
      - main
      - main-*

jobs:
  test-rust-crates:
    name: Test Rust Crates
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [
          ubuntu-latest,
        ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install nix
        uses: cachix/install-nix-action@v27
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          nix_path: nixpkgs=channel:nixos-24.05

      - uses: cachix/cachix-action@v15
        with:
          name: holochain-ci

      - name: Run tests
        run: |
          nix develop --no-update-lock-file --command bash -c "make integration-test"

  test-kotlin-libraries:
    name: Test Kotlin Libraries
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - api-level: 28
            arch-ndk: x86_64
            arch-cargo: x86_64-linux-android
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Free Disk Space
        uses: jlumbroso/free-disk-space@main
        with:
          android: false
          swap-storage: false
        
      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Gradle cache
        uses: gradle/actions/setup-gradle@v3
        
      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.target.api-level }}-${{ matrix.target.arch-ndk }}

      - name: Install nix
        uses: cachix/install-nix-action@v27
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          nix_path: nixpkgs=channel:nixos-24.05

      - uses: cachix/cachix-action@v15
        with:
          name: holochain-ci

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10

      - name: Build client and publish to mavenLocal
        run: |
          nix develop --no-update-lock-file --command bash -c "pnpm run build:single-target:runtime-types-ffi ${{ matrix.target.arch-cargo }} \
            && cp libraries/client/gradle.properties.ci libraries/client/gradle.properties \
            && pnpm run build:client \
            && pnpm run publish:local:client"

      - name: Build service
        run: |
          nix develop --no-update-lock-file --command bash -c "pnpm run build:single-target:runtime-ffi ${{ matrix.target.arch-cargo }} \
            && cp libraries/service/gradle.properties.ci libraries/service/gradle.properties \
            && pnpm run build:service"

      - name: Lint client, service, tauri-plugin-client, tauri-plugin-service
        run: |
          nix develop --no-update-lock-file --command bash -c "pnpm run lint"

      - name: Run tests
        uses: ReactiveCircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.target.api-level }}
          arch: ${{ matrix.target.arch-ndk }}
          target: google_apis
          script: |
            pnpm run test:client
            pnpm run test:service